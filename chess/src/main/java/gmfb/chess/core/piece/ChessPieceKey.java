package gmfb.chess.core.piece;

import java.util.Set;

import com.google.common.collect.Sets;

public enum ChessPieceKey
{
	WHITE_KING_ROOK, WHITE_KING_KNIGHT, WHITE_KING_BISHOP, WHITE_KING, WHITE_QUEEN_ROOK, WHITE_QUEEN_KNIGHT, WHITE_QUEEN_BISHOP, WHITE_QUEEN, WHITE_KING_ROOK_PAWN, WHITE_KING_KNIGHT_PAWN, WHITE_KING_BISHOP_PAWN, WHITE_KING_PAWN, WHITE_QUEEN_ROOK_PAWN, WHITE_QUEEN_KNIGHT_PAWN, WHITE_QUEEN_BISHOP_PAWN, WHITE_QUEEN_PAWN, BLACK_KING_ROOK, BLACK_KING_KNIGHT, BLACK_KING_BISHOP, BLACK_KING, BLACK_QUEEN_ROOK, BLACK_QUEEN_KNIGHT, BLACK_QUEEN_BISHOP, BLACK_QUEEN, BLACK_KING_ROOK_PAWN, BLACK_KING_KNIGHT_PAWN, BLACK_KING_BISHOP_PAWN, BLACK_KING_PAWN, BLACK_QUEEN_ROOK_PAWN, BLACK_QUEEN_KNIGHT_PAWN, BLACK_QUEEN_BISHOP_PAWN, BLACK_QUEEN_PAWN;

	public static Set<ChessPieceKey> getAllKeysForColor(ChessPieceColor color)
	{
		if (color.equals(ChessPieceColor.WHITE))
		{
			return Sets
			    .newHashSet(WHITE_KING_ROOK, WHITE_KING_KNIGHT, WHITE_KING_BISHOP, WHITE_KING,
			        WHITE_QUEEN_ROOK, WHITE_QUEEN_KNIGHT, WHITE_QUEEN_BISHOP, WHITE_QUEEN,
			        WHITE_KING_ROOK_PAWN, WHITE_KING_KNIGHT_PAWN, WHITE_KING_BISHOP_PAWN,
			        WHITE_KING_PAWN, WHITE_QUEEN_ROOK_PAWN, WHITE_QUEEN_KNIGHT_PAWN,
			        WHITE_QUEEN_BISHOP_PAWN, WHITE_QUEEN_PAWN);
		}
		return Sets.newHashSet(BLACK_KING_ROOK, BLACK_KING_KNIGHT, BLACK_KING_BISHOP, BLACK_KING,
		    BLACK_QUEEN_ROOK, BLACK_QUEEN_KNIGHT, BLACK_QUEEN_BISHOP, BLACK_QUEEN,
		    BLACK_KING_ROOK_PAWN, BLACK_KING_KNIGHT_PAWN, BLACK_KING_BISHOP_PAWN, BLACK_KING_PAWN,
		    BLACK_QUEEN_ROOK_PAWN, BLACK_QUEEN_KNIGHT_PAWN, BLACK_QUEEN_BISHOP_PAWN, BLACK_QUEEN_PAWN);
	}

	public static ChessPieceKey getKingKey(ChessPieceColor color)
	{
		if (color.equals(ChessPieceColor.WHITE))
		{
			return WHITE_KING;
		}
		return BLACK_KING;
	}
}
